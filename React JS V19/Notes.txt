Introduction Of React.js
    React.js is a JavaScript library used for building user interfaces (UIs) and Single Page Application (SPA).
    Created by Jordan Walke at Facebook.
    It is Most Popular JavaScript library for frontend development.

History Of React.js
    ss
    First Code of reract.js "News Feed" On Facebook.

    React.js began as an internal tool for dynamic Facebook component.
    Created in 2011 but remained private initially.
    React.js was open sourced by Jordan Walke and Tom Occhino at JSConfUS 2013.
    Released with the belief that its success at Facebook could benefit others.
    Initially faced criticism for combining JavaScript and HTML in single file.
    It was widely hated and criticized becouse of its combination of JavaScript and HTML in single file.
    It slowly gained traction and blew up in adoption.
    

Is React.js Library or Framework
    React is not a Framework. React is now a JavaScript Library for building user interfaces.
    It is also know as ReactJS and React.js, so don't get cobnfused if you read different notation in different places.
    React knows only one think that is to create an awesome UI.

React is all about Component
    React.js application is just tree of such Component.

React is declarative or Imperative
    React is declarative because it describes what the UI should look like rather than how to achieve it. This makes
    the code easier to read and maintain, as it is more focused on the end result rather than the steps involved in
    getting there.

How React Works
    Component => Instance => React Elemrnts => Dom Element => UI

Why React.js Over Vanilla JavaScript
    Oppose to Vanilla JavaScript, React has a concept called COMPONENTS which combines all HTML, CSS and JavaScript
    by features instead of separating HTML, CSS and JavaScript completely.
    React manages updating the DOM (DOcument Object MOdel) with the components written by us.

Why React.js?
    React is the most popular JavaScript library for building user interfaces.
    Component based Architecture
    Declarative UI
    Rich Ecosystem - npm packages
    Strong Community Support - Online/ Github

Prerequisites to Learn React.js
    HTML, CSS, JavaScript



Setting up Development Environment
    Download and Install Node.js LTS.
    Download and install any one => VS Code, Visual Stdio, Notepad++, Sublime Text, Vim, IntelliJ, Eclipse, Atom etc.

    Ways of Creating React.js Project
        Custom
        create-react-app
        Without Frameworks (vite, Parcel)
        With Meta Frameworks (Next.js, Remix, Getsby etc...)

    React Setup using bun
        npm i -g bun
        bun create vite
            Enter Project Name
            Select React
            Select JavaScript


React Working
React Install karne pr hamare pass by default ek HTML file hoti he. Or yahi HTML file Real DOM Kehlati he.
Is HTML file me JavaScript inject hoti he or yahi file project ka entry point kehlati he.
Like
      <div id="root"></div>
      <script type="module" src="/src/main.jsx"></script>

Isi k sath hamare pass ek main.jsx file hoti jisme createRoot function ki help se id root ko target kar k
vertual DOM create hota he. or is Virtual DOM me App.jsx ko import kar k Browser pr render (Show) kiya jata he.

App.jsx file bhi by default react k sath create hoti he. Isme hum basically callBack Function bana rahe hote he.
isliye is types ki file ko component bola jata he.
App.jsx or React component XML or JS k combination se banti he.

Function App me return karne se pehle likha gaya code vanilla JavaScript me likha jata he jaise variable
declaration and console work.or return karte time code XML or JS =JSX me likha jata he. 
Yaha laxical scope or function clousure ka concept dekhne ko milta he.

Component me sirf ek value return hoti he isliye hume overall return material ka parent tag banana compulsory
ho jata he.  Ek parent tag me sabhi tag ko as a child tag wrap kar diya jata he.
form, header, div, section, nav etc ki help se parent tag bana sakte he. sath me hum <>sugar fragment</>
ka use bhi kar sakte he.

Folder Structure
    node_modules:
        This is the folder which contains all the necessary libraries & dependencies by React.js
        We can ignore this folder completely.

    public:
        This folder contains all static files likes images, videos, fonts etc..

    src:
        This folder contains all source file.
        App.jsx:
        main.jsx
    
    .gitignore

Naming Convention
    camelCase:
    PascalCase
    snake_case
    kebab-camelCase

JSX in React 
    React => Component => JSX
    React is all about is component and component is a JavaScript function which return jsx.
    Jo bhi function jsx return karta he component kehlata he.
    Component: In React basically function is component and inbuuilt functkon called as a hooks.

    JSX stands for JavaScript XML. It allows you to write HTML elements in JavaScript and place them in the DOM
    Without any createElement() and appendChild() methods.
    It is a syntactical sugar introduced by Facebook for writting React.js components easily.


Component in React.js
    ss
    component name ka firstLetter capital hota he.

React Fragments
    SS
    React.Fragment or Fragment
    array with keys

Dynamic Values in JSX
    ss


Conditional rendring in react
ss with practice

Import and Export in React
ss





parameter actual formal
arguments actual formal




    




